@using DevExpress.ExpressApp.Actions

@{
    <style>
        .cw-240 {
            font-size: .9rem;
            font-weight: bold;
        }

        span.expand-btn.btn.btn-link.invisible {
            display: none;
        }

        .dxbs-tree ul.nav > .nav-item > .nav-link {
            padding: .7rem;
        }
    </style>
}

<div class="cw-240">

    <DxTreeView Data="@ActionControl.Items" AllowSelectNodes="true" SelectionChanged="@SelectionChanged">

        <DataMappings>
            <DxTreeViewDataMapping Children="Items"
                                   Text="Caption">
            </DxTreeViewDataMapping>
        </DataMappings>
        <NodeTextTemplate>
            @{
                var dataItem = (ChoiceActionItem)context.DataItem;
            }
            @*  <div class="p-3">

                </div>*@
            <i class="@GetFAIconClass(dataItem.ImageName)"></i><span class="ml-1">@dataItem.Caption</span>

        </NodeTextTemplate>
    </DxTreeView>
    @*<p class="demo-text cw-480 mt-2">Selected group: <b>@SelectedGroup</b></p>*@
</div>

<div class="mt-auto about-info text-muted mt-3">
    @((MarkupString)About)
</div>
@code {
    public static RenderFragment Create(RenderFragment titleTemplate, CustomShowNavigationItemActionControl actionControl, string about) => 
    @<CustomShowNavigationItemActionControlComponent TitleTemplate="@titleTemplate" ActionControl="@actionControl" About="@about"/>
    ;
    protected Dictionary<string, string> FontIcons = new Dictionary<string, string>
    {
        //{ ""}
    };

    [Parameter]
    public RenderFragment TitleTemplate { get; set; }
    [Parameter]
    public CustomShowNavigationItemActionControl ActionControl { get; set; }    
    [Parameter]
    public string About { get; set; }

    string SelectedGroup = "none";
    DxTreeView treeView;
    Dictionary<string, string> IconDictionary = new Dictionary<string, string>
    {
        { "BO_Contact","fas fa-id-card-alt"},
        { "BO_MyDetails","fas fa-address-card"},
        { "BO_Role","fas fa-user-tag"},
        { "BO_Unknown","far fa-sticky-note"},
        { "BO_Task","fas fa-tasks"},
        { "BO_User","fas fa-user"}
     };
    protected void SelectionChanged(TreeViewNodeEventArgs e)
    {
        SelectedGroup = e.NodeInfo.Text;
        InvokeAsync(StateHasChanged);
        ActionControl.DoExecute((ChoiceActionItem)e.NodeInfo.DataItem);
    }
    string GetFAIconClass(string navImageName)
    {
        string iconName = "";
        IconDictionary.TryGetValue(navImageName, out iconName);
        return iconName;
    }
}